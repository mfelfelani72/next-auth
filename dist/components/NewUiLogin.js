"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Image from "next/image";
export default function UiLogin({ onSubmit, errors, message, }) {
    return (_jsx("div", { className: "fixed inset-0 flex items-center justify-center bg-gradient-to-r from-gray-100 via-white to-gray-200 p-6", children: _jsxs("div", { className: "w-full max-w-lg bg-white rounded-3xl shadow-2xl overflow-hidden border border-gray-200", children: [_jsxs("div", { className: "flex flex-col items-center p-8 border-b border-gray-100 bg-gradient-to-b from-gray-50 to-white", children: [_jsx(Image, { src: "/logo.png", alt: "Logo", width: 90, height: 90, className: "mb-4 rounded-full shadow-md" }), _jsx("h1", { className: "text-3xl font-extrabold text-gray-800", children: "Welcome Back" }), _jsx("p", { className: "text-gray-500 text-sm mt-1", children: "Login with your credentials to continue" })] }), _jsxs("div", { className: "p-8", children: [message && (_jsx("div", { role: "alert", className: "mb-4 text-center text-red-500 font-medium", children: message })), _jsxs("form", { onSubmit: (e) => {
                                e.preventDefault();
                                const formData = new FormData(e.currentTarget);
                                onSubmit(formData);
                            }, noValidate: true, className: "space-y-6", children: [_jsxs("div", { children: [_jsx("label", { htmlFor: "username", className: "block text-sm font-semibold text-gray-700 mb-1", children: "Username" }), _jsx("input", { id: "username", name: "username", type: "text", placeholder: "Enter your username", required: true, className: `w-full px-4 py-3 rounded-lg bg-gray-50 border border-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-400 text-gray-800 placeholder-gray-400 ${(errors === null || errors === void 0 ? void 0 : errors.username) ? "border-red-500" : ""}` }), (errors === null || errors === void 0 ? void 0 : errors.username) && (_jsx("p", { className: "mt-1 text-sm text-red-500", children: errors.username }))] }), _jsxs("div", { children: [_jsx("label", { htmlFor: "password", className: "block text-sm font-semibold text-gray-700 mb-1", children: "Password" }), _jsx("input", { id: "password", name: "password", type: "password", placeholder: "Enter your password", required: true, className: `w-full px-4 py-3 rounded-lg bg-gray-50 border border-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-400 text-gray-800 placeholder-gray-400 ${(errors === null || errors === void 0 ? void 0 : errors.password) ? "border-red-500" : ""}` }), (errors === null || errors === void 0 ? void 0 : errors.password) && (_jsx("p", { className: "mt-1 text-sm text-red-500", children: errors.password }))] }), _jsx("button", { type: "submit", className: "w-full py-3 bg-indigo-600 text-white font-semibold rounded-lg shadow hover:bg-indigo-700 transition", children: "Log In" }), _jsxs("div", { className: "flex justify-center gap-4 mt-6", children: [_jsx("button", { type: "button", className: "flex items-center justify-center w-11 h-11 rounded-full bg-red-500 hover:bg-red-600 text-white font-bold", children: "G" }), _jsx("button", { type: "button", className: "flex items-center justify-center w-11 h-11 rounded-full bg-blue-600 hover:bg-blue-700 text-white font-bold", children: "F" }), _jsx("button", { type: "button", className: "flex items-center justify-center w-11 h-11 rounded-full bg-sky-400 hover:bg-sky-500 text-white font-bold", children: "T" })] }), _jsxs("p", { className: "text-center text-sm text-gray-600 mt-5", children: ["Don\u2019t have an account?", " ", _jsx("a", { href: "#", className: "text-indigo-600 hover:underline", children: "Sign up" })] })] })] })] }) }));
}
